global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


frontend https
	bind *:443
	mode tcp
	tcp-request inspect-delay 30s
	tcp-request content accept if { req_ssl_hello_type 1 }

	#use_backend app1-servers if { req_ssl_sni -i app1.example.com }
	default_backend www_s

backend www_s
	mode tcp
	server www_s 172.17.0.2:443

frontend http
	bind *:80
	mode http

	stats enable
	stats uri /haproxy?stats
	#stats realm Strictly\ Private
	#stats auth A_Username:YourPassword
	#stats auth Another_User:passwd

	option forwardfor

	#use_backend app1-servers2 if { hdr(host) -i app1.example.com }
	default_backend www

backend www
	server www 172.17.0.2:80 
